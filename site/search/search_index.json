{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#welcome-to-my-lil-placeaka-atlass-notebook","title":"welcome to my lil PLACE!!!(aka Atlas's Notebook)","text":""},{"location":"MATLAB%20notes/","title":"MATLAB notes","text":""},{"location":"MATLAB%20notes/#colors","title":"Colors","text":"[0 0.4470 0.7410] \u2018#0072BD\u2019 \u666e\u84dd [0.8500 0.3250 0.0980] \u2018#D95319\u2019 \u6697\u6a58 [0.9290 0.6940 0.1250] \u2018#EDB120\u2019 \u4e2d\u9ec4 [0.4940 0.1840 0.5560] \u2018#7E2F8E\u2019 \u7d2b\u8272 [0.4660 0.6740 0.1880] \u2018#77AC30\u2019 \u6811\u7eff [0.3010 0.7450 0.9330] \u2018#4DBEEE\u2019 \u6d45\u5929\u84dd [0.6350 0.0780 0.1840] \u2018#A2142F\u2019 \u82dd\u8910"},{"location":"MATLAB%20notes/#dsp-learning-using-matlab","title":"DSP Learning using MATLAB","text":""},{"location":"MATLAB%20notes/#basic-information-about-fdsp-companion","title":"Basic Information about FDSP Companion","text":"Name Description f caliper Measure points on plot using mouse cross hairs f prompt Prompt for a scalar in a specified range f clip Clip value to an interval, check calling arguments f randinit Initialize the random number generator f getsound Record signal from PC microphone f randg Gaussian white noise matrix f header Display header information for examples, figures, or problems f randu Uniformly distributed white noise matrix f labels Label graphical output f wait Pause to examine displayed output soundsc Play a signal as sound on the PC speaker (MATLAB)"},{"location":"MATLAB%20notes/#personal-learning-summary","title":"Personal Learning Summary","text":"personal practices<pre><code>b=[0,1];a=[3,-4,1];\n[R,p,C]=residuez(b,a)\n[b1,a1]=residuez(R,p,C)\n\nb=1;a=poly([0.9,0.9,-0.9]);\n[R,p,C]=residuez(b,a)\n\n% poly function outputs the coefficients of a polynomail using all roots as inputs \n% residuez can divide a rational z fraction, so its output format follows the regular of ZF \nR =\n    0.5000\n   -0.5000\np =\n    1.0000\n    0.3333\nC =\n     []\nb1 =\n   -0.0000    0.3333\na1 =\n    1.0000   -1.3333    0.3333\nR =\n   0.2500 + 0.0000i\n   0.2500 + 0.0000i\n   0.5000 - 0.0000i\np =\n  -0.9000 + 0.0000i\n   0.9000 + 0.0000i\n   0.9000 - 0.0000i\nC =\n     []\n\n\n[bz,az] = impinvar([2],[1,4,3],10)\n% AF -&gt; DF\n\n% \u7cfb\u7edf\u51fd\u6570\u5230\u683c\u578b\u7ed3\u6784 lattice\nK = tf2latc(b) %\u6ce8\u610fb(0)\u662f\u5426\u4e3a1\nK = tf2latc(1,a)\n[K,C] = tf2latc(b,a)\n\n% \u683c\u578b\u7ed3\u6784\u5230\u76f4\u63a5\u578b\u7ed3\u6784\nb = latc2tf(K,'fir') %K - \u6309\u987a\u5e8f\u6392\u5217\n[b,a] = latc2tf(K,1,'allpole')\n[b,a] = latc2tf(K,C)\n\n% \u683c\u578b\u6ee4\u6ce2\u5668\u8f93\u51fa\n[f,g] = latcfilt(K,x) %\u6ce8\u610f\u7cfb\u7edf\u589e\u76cab(0)\n[f,g] = latcfilt(K,1,x)\n[f,g] = latcfilt(K,C,x)\n</code></pre>"},{"location":"MATLAB%20notes/#gui","title":"GUI","text":"<ul> <li>GUI (Graphical User Interface) refers to a user interface that allows users to interact with computers or software through graphical and visual elements such as buttons, text boxes, icons, menus, and more. </li> </ul> <p>This type of interface design enables users to engage with computer programs in a more intuitive and user-friendly way, rather than relying on command line input. </p>"},{"location":"MATLAB%20notes/#components-of-gui","title":"Components of GUI","text":"<ol> <li>Windows: GUI typically consists of one or more windows. Each window can display different information or allow users to perform various operations.</li> <li>Controls: Various elements included in the window, common controls are:</li> <li>Button: Users can click to perform a specific action.</li> <li>Text Box: A place where users can input text.</li> <li>Label: Used to display static text.</li> <li>Drop-down Menu: Provides selectable options.</li> <li>Slider: Allows users to select a value by sliding.</li> <li>Events: Interactions by users with the GUI generate events, such as button clicks or text input. The program responds to these user actions through an event-driven mechanism.</li> </ol>"},{"location":"MATLAB%20notes/#implementation-of-gui","title":"Implementation of GUI","text":"<ol> <li> <p>Create the Window: Use the <code>figure</code> function to create a window and set its position and size.</p> </li> <li> <p>Add Controls: Use the <code>uicontrol</code> function to add buttons and text boxes, specifying their position, size, and text.</p> </li> <li> <p>Callback Function: Define a callback function for the button that executes when the button is clicked. </p> </li> </ol> <pre><code>function simple_gui()\n    % Create a graphical window\n    f = figure('Position', [300, 300, 400, 200], 'MenuBar', 'none', 'Name', 'Simple GUI', 'NumberTitle', 'off');\n\n    % Add a button\n    uicontrol('Style', 'pushbutton', ...\n              'Position', [150, 100, 100, 40], ...\n              'String', 'Click Me', ...\n              'Callback', @button_callback);\n\n    % Add a text box\n    text_box = uicontrol('Style', 'edit', ...\n                         'Position', [100, 60, 200, 25], ...\n                         'String', '');\n\n    % Button callback function\n    function button_callback(~, ~)\n        set(text_box, 'String', 'Hello, World!'); % Display text in the text box\n    end\nend\n\nfunction sliding_average_gui()\n    % \u521b\u5efaGUI\u754c\u9762\n    f = figure('Position', [100, 100, 600, 400], 'MenuBar', 'none', 'Name', 'Sliding Average', 'NumberTitle', 'off', 'Resize', 'off');\n\n    % \u8f93\u5165\u4fe1\u53f7\u7f16\u8f91\u6846\n    uicontrol('Style', 'text', 'Position', [20, 350, 80, 25], 'String', 'Input Signal:');\n    input_signal = uicontrol('Style', 'edit', 'Position', [120, 350, 200, 25]);\n\n    % \u7a97\u53e3\u5927\u5c0f\u7f16\u8f91\u6846\n    uicontrol('Style', 'text', 'Position', [20, 300, 120, 25], 'String', 'Window Size:');\n    window_size = uicontrol('Style', 'edit', 'Position', [120, 300, 50, 25], 'String', '3');\n\n    % \u8ba1\u7b97\u6309\u94ae\n    uicontrol('Style', 'pushbutton', 'Position', [250, 300, 100, 25], 'String', 'Smooth', 'Callback', @smooth_signal);\n\n    % \u663e\u793a\u7ed3\u679c\u7684\u8f74\n    axes('Position', [0.2, 0.1, 0.75, 0.5]);\n    title('Original Signal and Smoothed Signal');\n    xlabel('Sample Number');\n    ylabel('Amplitude');\n    grid on;\n\n    % \u5e73\u6ed1\u4fe1\u53f7\u7684\u56de\u8c03\u51fd\u6570\n    function smooth_signal(~, ~)\n        % \u83b7\u53d6\u8f93\u5165\u4fe1\u53f7\n        input_str = get(input_signal, 'String');\n        input_signal_data = str2num(input_str); \n\n        % \u83b7\u53d6\u7a97\u53e3\u5927\u5c0f\n        w_size = str2double(get(window_size, 'String'));\n\n        % \u8fdb\u884c\u6ed1\u52a8\u5e73\u5747\n        smoothed_signal = movmean(input_signal_data, w_size);\n\n        % \u7ed8\u5236\u7ed3\u679c\n        cla;\n        plot(input_signal_data, 'b', 'DisplayName', 'Original Signal'); hold on;\n        plot(smoothed_signal, 'r', 'DisplayName', 'Smoothed Signal');\n        legend('show');\n        title('Original Signal and Smoothed Signal');\n        grid on;\n    end\nend\n</code></pre>"},{"location":"MATLAB%20notes/#mathematical-and-statistical-operations-with-arrays","title":"Mathematical and Statistical Operations with Arrays","text":""},{"location":"MATLAB%20notes/#mathematical-functions","title":"Mathematical Functions","text":"Other Similar Functions <code>sin</code> Sine <code>cos</code> Cosine <code>log</code> Logarithm <code>round</code> Rounding Operation <code>sqrt</code> Square Root <code>mod</code> Modulus Many more <p>Matrix Operations (Including Scalar Expansion)</p> <p></p> Operators <code>+</code> Addition <code>-</code> Subtraction <code>*</code> Multiplication <code>/</code> Division <code>^</code> Exponentiation (Matrix exponentiation) <p>Element-wise Operations</p> <p></p> Operators <code>+</code> Addition <code>-</code> Subtraction <code>.*</code> Element-wise Multiplication <code>./</code> Element-wise Division <code>.^</code> Element-wise Exponentiation <p>Implicit Expansion</p> <p></p> Operators <code>+</code> Addition <code>-</code> Subtraction <code>.*</code> Element-wise Multiplication <code>./</code> Element-wise Division <code>.^</code> Element-wise Exponentiation <p>Array operations can be performed on operands of different compatible sizes. Two arrays have compatible sizes if the size of each dimension is either the same or one.</p>"},{"location":"MATLAB%20notes/#statistics-processing","title":"Statistics Processing","text":"<ul> <li>The plot command also works on matrices column-wise. (defaulted)So it can operate a matrix</li> </ul> <p>There will be a line plot for each column in the matrix.  For example, if <code>M</code> is 5-by-3, there will be three line plots on the graph. </p> <ul> <li> <p>For the <code>max</code> and <code>min</code> functions, you can request a second output that gives you the index for the maximum of each column. </p> </li> <li> <p>histogram()</p> </li> </ul> <p>histogram(X)   histogram(X,nbins)   histogram(X,edges)   histogram('BinEdges',edges,'BinCounts',counts)   histogram(C)   histogram(C,Categories)   histogram('Categories',Categories,'BinCounts',counts)   histogram(,Name,Value)   histogram(ax,)   h = histogram(___)</p> <pre><code>a=mean(b,\"omitnan\");%omitnan ignores all the values which are blank\n\nmonthly=mean(usage,2,\"omitnan\");%1:*default)column 2:row\n%'double'\u3001'native'\u3001'default'\u3001'omitnan'\u3001'includenan'\u3001'omitmissing' or 'includemissing'\u3002\nbar(monthly);\n\nminUsage=min(usage,[],2);\nmaxUsage=max(usage,[],2);\n\nminUse=min(usage,[],\"all\");\nmaxUse=max(usage,[],\"all\");\navgUse=mean(usage,\"all\",\"omitnan\");%notice the differences of where to set \"all\"\n\ndiff1990=diff(firstYear);\nplot(diff1990);\na=[1 2 3 1 4 2];\nb=diff(a)%diff is forward difference\n%1  1   -2  3   -2\n</code></pre>"},{"location":"MATLAB%20notes/#statistical-operations-on-matrices","title":"Statistical Operations on Matrices","text":"<p>Some common mathematical functions which calculate a value for each column in a matrix include:</p> Function Behavior <code>max</code> Largest elements <code>min</code> Smallest elements <code>mean</code> Average or mean value <code>median</code> Median value <code>mode</code> Most frequent values <code>std</code> Standard deviation <code>var</code> Variance <code>sum</code> Sum of elements <code>prod</code> Product of elements std <code>S = std(A,w,dim)</code> returns the standard deviation along dimension <code>dim</code>. To maintain the default normalization while specifying the dimension of operation, set <code>w = 0</code> in the second argument. <p>Many statistical functions accept an optional dimensional argument that specifies whether the operation should be applied to columns independently (the default) or to rows. </p> <pre><code>&gt;&gt; M = mean(A,dim)\n</code></pre> <code>M</code> Vector of average values along dimension <code>dim</code>. <code>A</code> Matrix <code>dim</code> Dimension across which the mean is taken. <code>1</code>: the mean of each column <code>2</code>: the mean of each row"},{"location":"MATLAB%20notes/#matrix-multiplication","title":"Matrix Multiplication","text":"<p>linear algebra rules...</p>"},{"location":"MATLAB%20notes/#the-backslash-operator","title":"The Backslash Operator","text":"<p>With scalars, and represent the same equation. The solution to these equations is , like you'd expect.</p> <p>Ax\u2260xA. So, Ax=B and xA=B are two different equations. The solution of both can be thought of as </p> <p>'B divided by A', but the order is important. </p> <p>MATLAB has two \"division\" operators: / (slash) and \\ (backslash).</p> Expression Interpretation <code>x = B/A</code> Solves <code>x*A = B</code> (for <code>x</code>) <code>x = A\\B</code> Solves <code>A*x = B</code> (for <code>x</code>)"},{"location":"MATLAB%20notes/#visualizing-data","title":"Visualizing Data","text":""},{"location":"MATLAB%20notes/#basic-functions","title":"Basic Functions","text":"Function Description <code>scatter</code> Scatter plot, with variable marker size and color <code>bar</code> Bar graph (vertical and horizontal) <code>stem</code> Discrete sequence (signal) plot <code>stairs</code> Stairstep graph <code>area</code> Filled area plot <code>pie</code> Pie chart <code>histogram</code> Histogram plot semilogy/loglog/semilogx log fplot \u7ed8\u5236\u51fd\u6570\u6216\u53c2\u6570\u65b9\u7a0b\u66f2\u7ebf errorbar \u8bef\u5dee\u6761\u56fe ginput \u4ea4\u4e92\u7ed8\u56fe\uff0c[x,y] = ginput(n)[x,y] = ginput\uff0c[x,y,button] = ginput(\u2026)"},{"location":"MATLAB%20notes/#labels","title":"labels","text":"<p>\u56fe\u9898\u6807\u6ce8    title(obj,__)  \u53ef\u4ee5\u4e3a\u6307\u5b9a\u7684\u5bf9\u8c61\u6dfb\u52a0\u6807\u9898</p> <p>\u56fe\u4f8b\u6807\u6ce8    legend(__,'Orientation',Value)  'vertical' 'horizontal'</p> <p>\u6587\u672c\u6807\u6ce8    text(1.1,8,['$_' , latex() , '$'] , 'interpreter' , 'latex')</p>"},{"location":"MATLAB%20notes/#identifying-available-plot-types","title":"Identifying Available Plot Types","text":"<pre><code>xticklabels([\"January\",...\n    \"April\",...\n    \"July\",...\n    \"October\"]);\n\nbar(monthly);\nxticklabels([\"January\",...\n    \"April\",...\n    \"July\",...\n    \"October\"]);\nxticks([1 4 7 10])%assign the places of labels\nxticklabels([\"January\",...\n    \"April\",...\n    \"July\",...\n    \"October\"]);\n\nplot(x,y,\"o-\",\"MarkerEdgeColor\",\"c\",\"color\",[0.6 0.2 0.8])\n</code></pre> <ul> <li><code>LineWidth</code> (width of the line and marker edges)</li> <li><code>MarkerSize</code> (size of the marker symbols)</li> <li><code>MarkerEdgeColor</code> (color of the edge of the marker symbols)</li> <li><code>MarkerFaceColor</code> (color of the interior of the marker symbols)</li> </ul> <p>For eight specific colors, you can refer to them by name or a single letter abbreviation:</p> red (r) green (g) blue (b) black (k) magenta (m) yellow (y) cyan (c) white(w)"},{"location":"MATLAB%20notes/#axis-control","title":"Axis Control","text":"<p>MATLAB automatically chooses the limits and tick markings for plot axes. Although the automatic values are usually aesthetically reasonable, you may want more precise control of the axis appearance to investigate subsets of the data.</p> <p> </p> <pre><code>xyLims=axis\n%1990   2008    1   8\n</code></pre>"},{"location":"MATLAB%20notes/#visualizing-matrices","title":"Visualizing Matrices","text":"<pre><code>surf(yr,mth,revenue);\nmesh(yr,mth,revenue);\ncontour(yr,mth,revenue);%\u77e9\u9635\u7684\u7b49\u9ad8\u7ebf\u56fe\n</code></pre>"},{"location":"MATLAB%20notes/#conditional-data-selection","title":"Conditional Data Selection","text":"<pre><code>hwLast10 = any(homewinning(end-9:end))\nnumHomeLosing=nnz(~homewinning(1:10))%count the Number of Non-Zero values in an array\n\n%You can obtain the locations of just the first or last n true values in a logical vector by providing optional extra arguments to find.\n%where dirn is either \"first\" or \"last\".\n\nidx = find(v,n,dirn)\n\nplot(d,(time - min(time)),\"x-\")\nxlabel(\"Distance (m)\")\nylabel(\"Time Behind Lead (s)\")\nxticks(d)\nlegend(country,\"Location\",\"eastoutside\")%\"eastoutside\" exracts legends out\n</code></pre>"},{"location":"MATLAB%20notes/#tables-of-data","title":"Tables of Data","text":"<p>1.table tool button</p> <p>2.programmatically using the function.</p> <p><pre><code>&gt;&gt; EPL = readtable(\"EPLresults.xlsx\")\n</code></pre> The readtable function creates the table variable names from the column headings in file. Because some headings contain spaces (\"Home Wins\"), MATLAB modifies them to make them valid MATLAB variable names (HomeWins).</p> <code>EPL</code> Name of the variable you would like to store your data to in MATLAB, returned as a table array. <code>\"EPLresults.xlsx\"</code> Name of the file you would like to import, entered as text. <pre><code>%You can use the summary function to display a summary of each variable.\nsummary(data)\n\nteamWins=table(team,w)%remain the fomer order of matrix\n\nstats = array2table(WDL,\"VariableNames\",[\"Wins\" \"Draws\" \"Losses\"])\n\nwinners = sortrows(EPL,[\"HomeWins\" \"AwayWins\"],\"descend\")%\u53ef\u4ee5\u5b9e\u73b0\u591a\u91cd\u6392\u5e8f\uff0c\u5148\u6392\u5e8f\u524d\u8005\uff0c\u518d\u6839\u636e\u540e\u8005\u6392\u5e8f\n\nEPL = movevars(EPL,\"Points\",\"After\",1)%\u66f4\u6362\u987a\u5e8f\uff0c\u4f7f*\u6392\u5728*\u540e\n\n%Use the cumsum function to calculate the cumulative sum\nptsTot = cumsum(manU.Points)\n</code></pre>"},{"location":"MATLAB%20notes/#proprocessing-data","title":"Proprocessing Data","text":"<pre><code>centeredUsage = normalize(usage,\"center\",\"mean\");%\u4e0d\u52a0\u53c2\u6570\u7684\u8bdd\uff0c\u9ed8\u8ba4\u5747\u503c\u4e3a\u96f6\uff0c\u8fdb\u884cz\u5f52\u4e00\u5316\u5904\u7406\n\nscaledUsage = normalize(usage,\"scale\",\"first\");\n\nrangeUsage = normalize(usage,\"range\",[-1 1]);\n\nxnan=standardizeMissing(x,[NaN -999])\n\nidx=ismissing(x,[NaN,-999])\n\npopulation =fillmissing(population,\"linear\")\nplot(yr,population,\"o-\")%\u586b\u5145\u7f3a\u5931\u6570\u636e\n\nplotmatrix(usage)%\u753b\u51fa\u6240\u6709\u7c7b\u578b\u7684graphics\n\nusagecorr = corrcoef(usage)%\u8ba1\u7b97\u76f8\u5173\u7cfb\u6570\n</code></pre>"},{"location":"fundamental%20principles%20%20of%20Marxism/","title":"fundamental principles  of Marxism","text":""},{"location":"fundamental%20principles%20%20of%20Marxism/#_1","title":"\u4e00\u3001\u8fa9\u8bc1\u6cd5","text":""},{"location":"fundamental%20principles%20%20of%20Marxism/#_2","title":"\u9ed1\u683c\u5c14\u7684\u4e3b\u5ba2\u4f53\u8fa9\u8bc1\u6cd5","text":"<p>\u7cbe\u795e\u73b0\u8c61\u5b66+\u54f2\u5b66\u5168\u4e66</p> <ul> <li> <p>\u610f\u8bc6\u548c\u5bf9\u8c61\u4f1a\u5728\u4e0d\u5bf9\u7b49\u7684\u60c5\u51b5\u4e0b\u9010\u6e10\u6fc0\u53d1</p> </li> <li> <p>\u5f53\u6211\u4eec\u5c06\u8ba4\u77e5\u7684\u4e3b\u4f53\u7eb3\u5165\u5bf9\u611f\u6027\u77e5\u8bc6\u7684\u5206\u6790\u4e2d\u53ef\u4ee5\u53d1\u73b0\uff0c\u6b64\u65f6\u5df2\u7ecf\u8d85\u8d8a\u4e86\u201c\u611f\u6027\u786e\u5b9a\u6027\u201d\u7684\u8ba4\u77e5\u6c34\u5e73--&gt;\u5171\u76f8</p> </li> <li> <p>\u8fa9\u8bc1\u6cd5\uff1a\u8fd0\u52a8\u53d8\u5316\u53d1\u5c55\u770b\u5f85\u4e8b\u7269\uff08\u9769\u547d\u5f0f\uff09</p> </li> </ul> <p>\u5f62\u800c\u4e0a\u5b66\uff1a\u5b64\u7acb\u9759\u6b62\u6c38\u6052\uff08\u5b88\u65e7\uff09--&gt; \u73b0\u4ee3\u79d1\u5b66</p> <p>\u4e09\u5927\u89c4\u5f8b\uff1a</p> <ol> <li>\u5bf9\u7acb\u7edf\u4e00\u89c4\u5f8b</li> <li>\u91cf\u53d8\u8d28\u53d8\u89c4\u5f8b</li> <li>\u5426\u5b9a\u4e4b\u5426\u5b9a\u89c4\u5f8b</li> </ol>"},{"location":"fundamental%20principles%20%20of%20Marxism/#_3","title":"\u552f\u7269\u4e3b\u4e49\u8fa9\u8bc1\u6cd5","text":"<p>\u65b9\u6cd5\u8bba\u610f\u4e49\uff1a</p> <ol> <li>\u666e\u904d\u8054\u7cfb\u3001\u8fd0\u52a8\u3001\u53d8\u5316\u7684\u89c2\u70b9\uff0c\u77db\u76fe\u7684\u666e\u904d\u6027\u89c2\u70b9</li> <li>\u4e3b\u6b21\u77db\u76fe</li> <li>\u53d1\u5c55\u7684\u89c2\u70b9\uff0c\u5426\u5b9a\u4e4b\u5426\u5b9a</li> </ol>"},{"location":"fundamental%20principles%20%20of%20Marxism/#_4","title":"\u4e8c\u3001\u5386\u53f2\u552f\u7269\u4e3b\u4e49","text":""},{"location":"fundamental%20principles%20%20of%20Marxism/#_5","title":"\u552f\u7269\u53f2\u89c2\u57fa\u672c\u6784\u56fe","text":"<p>\u552f\u5fc3\u4e3b\u4e49---&gt;\u6709\u90e8\u5206\u4eba\u53ef\u4ee5\u4e0d\u4ece\u4e8b\u7269\u8d28\u751f\u4ea7\u6d3b\u52a8---&gt;\u6784\u5efa\u610f\u8bc6\u5f62\u6001</p> <p>\u793e\u4f1a\u5206\u5de5\u3001\u57ce\u4e61\u5206\u79bb\u3001\u9636\u7ea7\u5206\u79bb---&gt;\u552f\u5fc3\u793e\u4f1a</p>"}]}